[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Gabriel Guzman",
    "section": "",
    "text": "Biology and Environmental Science undergraduate interested in Data Science and Data Analytics."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Gabriel Guzman",
    "section": "Education",
    "text": "Education\nGettysburg College | Gettysburg, PA\nB.S in Biology | Aug 2020 - May 2024\nB.S in Environmental Studie | Aug 2020 - May 2024"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Gabriel Guzman",
    "section": "Experience",
    "text": "Experience"
  },
  {
    "objectID": "posts/titanic/index.html",
    "href": "posts/titanic/index.html",
    "title": "Titanic Survival A Machine Learning Based Analysis",
    "section": "",
    "text": "Titanic Survival: A Machine Learning based Analysis\nBased on Kaggle’s ‘Titanic - Machine Learning from Disaster’ Machine Learning Competition (https://www.kaggle.com/competitions/titanic/data)\n\n#---Installing Libraries---#\nimport numpy as np \nimport pandas as pd\n\n\n#---Loading Data---#\n\ntrain_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\ntest_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\n\n#---Exploratory Data Analysis---#\n\n# Summary of train data\ntest_data.describe()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Age\n      SibSp\n      Parch\n      Fare\n    \n  \n  \n    \n      count\n      891.000000\n      891.000000\n      891.000000\n      714.000000\n      891.000000\n      891.000000\n      891.000000\n    \n    \n      mean\n      446.000000\n      0.383838\n      2.308642\n      29.699118\n      0.523008\n      0.381594\n      32.204208\n    \n    \n      std\n      257.353842\n      0.486592\n      0.836071\n      14.526497\n      1.102743\n      0.806057\n      49.693429\n    \n    \n      min\n      1.000000\n      0.000000\n      1.000000\n      0.420000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      223.500000\n      0.000000\n      2.000000\n      20.125000\n      0.000000\n      0.000000\n      7.910400\n    \n    \n      50%\n      446.000000\n      0.000000\n      3.000000\n      28.000000\n      0.000000\n      0.000000\n      14.454200\n    \n    \n      75%\n      668.500000\n      1.000000\n      3.000000\n      38.000000\n      1.000000\n      0.000000\n      31.000000\n    \n    \n      max\n      891.000000\n      1.000000\n      3.000000\n      80.000000\n      8.000000\n      6.000000\n      512.329200\n    \n  \n\n\n\n\n\n# Women survived in train data \nwomen = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)/len(women)\nprint(\"% of women who survived:\", rate_women)\n\n# Men survived in train data \nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)/len(men)\nprint(\"% of men who survived:\", rate_men)\n\n% of women who survived: 0.7420382165605095\n% of men who survived: 0.18890814558058924\n\n\n\n# Machine Learning Model (Randoom Forest Algorithm)\n\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions, 'Sex': test_data.Sex})\noutput.to_csv('submission.csv', index=False)\n\n\n# Female survived = 0.910828025 \n# Male survived = 0.010398614\n\n# % of women who survived: 0.7420382165605095\n# % of men who survived: 0.18890814558058924"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Butterfly Population Analysis\n\n\n\nData Science\n\n\nData Analytics\n\n\nBiology\n\n\n\n\n\n\n\nGabriel Guzman\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nButterfly Population Analysis\n\n\n\nData Science\n\n\nData Analytics\n\n\nBiology\n\n\n\n\n\n\n\nGabriel Guzman\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Intro to Data Science Presentation\n\n\n\nData Science\n\n\nData Analytics\n\n\nMachine Learning\n\n\n\n\n\n\n\nGabriel Guzman\n\n\nMar 2, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/titanic/index.html",
    "href": "projects/titanic/index.html",
    "title": "Titanic Survival A Machine Learning Based Analysis",
    "section": "",
    "text": "Titanic Survival: A Machine Learning based Analysis\nBased on Kaggle’s ‘Titanic - Machine Learning from Disaster’ Machine Learning Competition (https://www.kaggle.com/competitions/titanic/data)\n\n\nCode\n#---Installing Libraries---#\nimport numpy as np \nimport pandas as pd\n\n\n\n\nCode\n#---Loading Data---#\n\ntrain_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\ntest_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\n\n\n\nCode\n#---Exploratory Data Analysis---#\n\n# Summary of train data\ntest_data.describe()\n\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Age\n      SibSp\n      Parch\n      Fare\n    \n  \n  \n    \n      count\n      891.000000\n      891.000000\n      891.000000\n      714.000000\n      891.000000\n      891.000000\n      891.000000\n    \n    \n      mean\n      446.000000\n      0.383838\n      2.308642\n      29.699118\n      0.523008\n      0.381594\n      32.204208\n    \n    \n      std\n      257.353842\n      0.486592\n      0.836071\n      14.526497\n      1.102743\n      0.806057\n      49.693429\n    \n    \n      min\n      1.000000\n      0.000000\n      1.000000\n      0.420000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      223.500000\n      0.000000\n      2.000000\n      20.125000\n      0.000000\n      0.000000\n      7.910400\n    \n    \n      50%\n      446.000000\n      0.000000\n      3.000000\n      28.000000\n      0.000000\n      0.000000\n      14.454200\n    \n    \n      75%\n      668.500000\n      1.000000\n      3.000000\n      38.000000\n      1.000000\n      0.000000\n      31.000000\n    \n    \n      max\n      891.000000\n      1.000000\n      3.000000\n      80.000000\n      8.000000\n      6.000000\n      512.329200\n    \n  \n\n\n\n\n\n\nCode\n# Women survived in train data \nwomen = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)/len(women)\nprint(\"% of women who survived:\", rate_women)\n\n# Men survived in train data \nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)/len(men)\nprint(\"% of men who survived:\", rate_men)\n\n\n% of women who survived: 0.7420382165605095\n% of men who survived: 0.18890814558058924\n\n\n\n\nCode\n# Machine Learning Model (Randoom Forest Algorithm)\n\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions, 'Sex': test_data.Sex})\noutput.to_csv('submission.csv', index=False)\n\n\n\n\nCode\n# Female survived = 0.910828025 \n# Male survived = 0.010398614\n\n# % of women who survived: 0.7420382165605095\n# % of men who survived: 0.18890814558058924"
  },
  {
    "objectID": "blog-posts/titanic/index.html",
    "href": "blog-posts/titanic/index.html",
    "title": "Empty",
    "section": "",
    "text": "Titanic Survival: A Machine Learning based Analysis\nBased on Kaggle’s ‘Titanic - Machine Learning from Disaster’ Machine Learning Competition (https://www.kaggle.com/competitions/titanic/data)\n\n#---Installing Libraries---#\nimport numpy as np \nimport pandas as pd\n\n\n#---Loading Data---#\n\ntrain_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\ntest_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\n\n#---Exploratory Data Analysis---#\n\n# Summary of train data\ntest_data.describe()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Age\n      SibSp\n      Parch\n      Fare\n    \n  \n  \n    \n      count\n      891.000000\n      891.000000\n      891.000000\n      714.000000\n      891.000000\n      891.000000\n      891.000000\n    \n    \n      mean\n      446.000000\n      0.383838\n      2.308642\n      29.699118\n      0.523008\n      0.381594\n      32.204208\n    \n    \n      std\n      257.353842\n      0.486592\n      0.836071\n      14.526497\n      1.102743\n      0.806057\n      49.693429\n    \n    \n      min\n      1.000000\n      0.000000\n      1.000000\n      0.420000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      223.500000\n      0.000000\n      2.000000\n      20.125000\n      0.000000\n      0.000000\n      7.910400\n    \n    \n      50%\n      446.000000\n      0.000000\n      3.000000\n      28.000000\n      0.000000\n      0.000000\n      14.454200\n    \n    \n      75%\n      668.500000\n      1.000000\n      3.000000\n      38.000000\n      1.000000\n      0.000000\n      31.000000\n    \n    \n      max\n      891.000000\n      1.000000\n      3.000000\n      80.000000\n      8.000000\n      6.000000\n      512.329200\n    \n  \n\n\n\n\n\n# Women survived in train data \nwomen = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)/len(women)\nprint(\"% of women who survived:\", rate_women)\n\n# Men survived in train data \nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)/len(men)\nprint(\"% of men who survived:\", rate_men)\n\n% of women who survived: 0.7420382165605095\n% of men who survived: 0.18890814558058924\n\n\n\n# Machine Learning Model (Randoom Forest Algorithm)\n\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions, 'Sex': test_data.Sex})\noutput.to_csv('submission.csv', index=False)\n\n\n# Female survived = 0.910828025 \n# Male survived = 0.010398614\n\n# % of women who survived: 0.7420382165605095\n# % of men who survived: 0.18890814558058924"
  },
  {
    "objectID": "projects/Lepidoptera in Gettysburg/index.html",
    "href": "projects/Lepidoptera in Gettysburg/index.html",
    "title": "Titanic Survival A Machine Learning Based Analysis",
    "section": "",
    "text": "Titanic Survival: A Machine Learning based Analysis\nBased on Kaggle’s ‘Titanic - Machine Learning from Disaster’ Machine Learning Competition (https://www.kaggle.com/competitions/titanic/data)\n\n\nCode\n#---Installing Libraries---#\nimport numpy as np \nimport pandas as pd\n\n\n\n\nCode\n#---Loading Data---#\n\ntrain_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\ntest_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\n\n\n\nCode\n#---Exploratory Data Analysis---#\n\n# Summary of train data\ntest_data.describe()\n\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Age\n      SibSp\n      Parch\n      Fare\n    \n  \n  \n    \n      count\n      891.000000\n      891.000000\n      891.000000\n      714.000000\n      891.000000\n      891.000000\n      891.000000\n    \n    \n      mean\n      446.000000\n      0.383838\n      2.308642\n      29.699118\n      0.523008\n      0.381594\n      32.204208\n    \n    \n      std\n      257.353842\n      0.486592\n      0.836071\n      14.526497\n      1.102743\n      0.806057\n      49.693429\n    \n    \n      min\n      1.000000\n      0.000000\n      1.000000\n      0.420000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      223.500000\n      0.000000\n      2.000000\n      20.125000\n      0.000000\n      0.000000\n      7.910400\n    \n    \n      50%\n      446.000000\n      0.000000\n      3.000000\n      28.000000\n      0.000000\n      0.000000\n      14.454200\n    \n    \n      75%\n      668.500000\n      1.000000\n      3.000000\n      38.000000\n      1.000000\n      0.000000\n      31.000000\n    \n    \n      max\n      891.000000\n      1.000000\n      3.000000\n      80.000000\n      8.000000\n      6.000000\n      512.329200\n    \n  \n\n\n\n\n\n\nCode\n# Women survived in train data \nwomen = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)/len(women)\nprint(\"% of women who survived:\", rate_women)\n\n# Men survived in train data \nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)/len(men)\nprint(\"% of men who survived:\", rate_men)\n\n\n% of women who survived: 0.7420382165605095\n% of men who survived: 0.18890814558058924\n\n\n\n\nCode\n# Machine Learning Model (Randoom Forest Algorithm)\n\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions, 'Sex': test_data.Sex})\noutput.to_csv('submission.csv', index=False)\n\n\n\n\nCode\n# Female survived = 0.910828025 \n# Male survived = 0.010398614\n\n# % of women who survived: 0.7420382165605095\n# % of men who survived: 0.18890814558058924"
  },
  {
    "objectID": "blog-posts/titanic-presentation/index.html",
    "href": "blog-posts/titanic-presentation/index.html",
    "title": "Intro to Data Science Presentation",
    "section": "",
    "text": "Titanic Survival: A Machine Learning Based Analysis\nData Science Presentation for Association of Computing Machinery.\nThe Association for Computing Machinery in Gettysburg College is a student-led organization where students from different disciplines and fields with interest in computer science gather to learn from each other and to form a community. For this week’s meeting, I will be giving a presentation on “Into to Data Science”, demonstrating the data science and data analytics workflow, from data exploration, hypothesis making, and modelling processes required to answer data-driven questions. This presentation is adapted from Kaggle’s ‘Titanic - Machine Learning from Disaster’ Machine Learning Competition (https://www.kaggle.com/competitions/titanic/data).\n\n#---Installing Libraries---#\nimport numpy as np \nimport pandas as pd\n\n\n#---Loading Data---#\n\ntrain_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\ntest_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\n\n#---Exploratory Data Analysis---#\n\n# Summary of train data\ntest_data.describe()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Age\n      SibSp\n      Parch\n      Fare\n    \n  \n  \n    \n      count\n      891.000000\n      891.000000\n      891.000000\n      714.000000\n      891.000000\n      891.000000\n      891.000000\n    \n    \n      mean\n      446.000000\n      0.383838\n      2.308642\n      29.699118\n      0.523008\n      0.381594\n      32.204208\n    \n    \n      std\n      257.353842\n      0.486592\n      0.836071\n      14.526497\n      1.102743\n      0.806057\n      49.693429\n    \n    \n      min\n      1.000000\n      0.000000\n      1.000000\n      0.420000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      223.500000\n      0.000000\n      2.000000\n      20.125000\n      0.000000\n      0.000000\n      7.910400\n    \n    \n      50%\n      446.000000\n      0.000000\n      3.000000\n      28.000000\n      0.000000\n      0.000000\n      14.454200\n    \n    \n      75%\n      668.500000\n      1.000000\n      3.000000\n      38.000000\n      1.000000\n      0.000000\n      31.000000\n    \n    \n      max\n      891.000000\n      1.000000\n      3.000000\n      80.000000\n      8.000000\n      6.000000\n      512.329200\n    \n  \n\n\n\n\n\n# Women survived in train data \nwomen = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)/len(women)\nprint(\"% of women who survived:\", rate_women)\n\n# Men survived in train data \nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)/len(men)\nprint(\"% of men who survived:\", rate_men)\n\n% of women who survived: 0.7420382165605095\n% of men who survived: 0.18890814558058924\n\n\n\n# Machine Learning Model (Randoom Forest Algorithm)\n\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions, 'Sex': test_data.Sex})\noutput.to_csv('submission.csv', index=False)\n\n\n# Female survived = 0.910828025 \n# Male survived = 0.010398614\n\n# % of women who survived: 0.7420382165605095\n# % of men who survived: 0.18890814558058924"
  },
  {
    "objectID": "projects/lepidoptera-gettysburg/index.html",
    "href": "projects/lepidoptera-gettysburg/index.html",
    "title": "Butterfly Population Analysis",
    "section": "",
    "text": "Research Project on the change of local butterfly populations and relation to plant resources.\nThe insect apocalypse has\n\n\n\n\n\nThe Cross-Disciplinary Science Institute or X-SIG is a program offered by Gettyburg College for undergraduate students to work on mentored research projects with faculty from a variety of departments.\n\n\nRoyal Restoration of Regal Fritillary Habitat (and Other Easy-to-Pronounce Organisms)\n\n\n\nSugar Magnolia, Blossom Blooming, Heads All Empty and I Don’t Care"
  },
  {
    "objectID": "blog-posts/intro-to-data/index.html",
    "href": "blog-posts/intro-to-data/index.html",
    "title": "Intro to Data Science Presentation",
    "section": "",
    "text": "Data Science Presentation for Association of Computing Machinery\nIntroductory data science presentation and project walkthrough with Gettysburg College students.\n\n\nThe GBIF Data Explorer is a web application that allows users to explore and analyze biodiversity data for Poland from the Global Biodiversity Information Facility (GBIF) database.\nThe app is built using the Shiny package for R. It includes several visualizations and filters created using the following packages: DT, shiny, shinyWidgets, shinythemes, shinyjs, bslib, bsicons, lubridate, leaflet, highcharter…. Check out the shiny dashboard\n\n\n\n\n\n\nThe Association for Computing Machinery in Gettysburg College is a student-led organization where students from different disciplines and fields with interest in computer science gather to learn from each other and to form a community. For this week’s meeting, I will be giving a presentation on “Into to Data Science”, demonstrating the data science and data analytics workflow, from data exploration, hypothesis making, and modelling processes required to answer data-driven questions. This presentation is adapted from Kaggle’s ‘Titanic - Machine Learning from Disaster’ Machine Learning Competition (https://www.kaggle.com/competitions/titanic/data).\n\n#---Installing Libraries---#\nimport numpy as np \nimport pandas as pd\n\n\n#---Loading Data---#\n\ntrain_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\ntest_data = pd.read_csv(\"/Users/gabrielguzman/School/Research/Data Science/titanic/train.csv\")\n\n\n#---Exploratory Data Analysis---#\n\n# Summary of train data\ntest_data.describe()\n\n\n\n\n\n  \n    \n      \n      PassengerId\n      Survived\n      Pclass\n      Age\n      SibSp\n      Parch\n      Fare\n    \n  \n  \n    \n      count\n      891.000000\n      891.000000\n      891.000000\n      714.000000\n      891.000000\n      891.000000\n      891.000000\n    \n    \n      mean\n      446.000000\n      0.383838\n      2.308642\n      29.699118\n      0.523008\n      0.381594\n      32.204208\n    \n    \n      std\n      257.353842\n      0.486592\n      0.836071\n      14.526497\n      1.102743\n      0.806057\n      49.693429\n    \n    \n      min\n      1.000000\n      0.000000\n      1.000000\n      0.420000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      223.500000\n      0.000000\n      2.000000\n      20.125000\n      0.000000\n      0.000000\n      7.910400\n    \n    \n      50%\n      446.000000\n      0.000000\n      3.000000\n      28.000000\n      0.000000\n      0.000000\n      14.454200\n    \n    \n      75%\n      668.500000\n      1.000000\n      3.000000\n      38.000000\n      1.000000\n      0.000000\n      31.000000\n    \n    \n      max\n      891.000000\n      1.000000\n      3.000000\n      80.000000\n      8.000000\n      6.000000\n      512.329200\n    \n  \n\n\n\n\n\n# Women survived in train data \nwomen = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)/len(women)\nprint(\"% of women who survived:\", rate_women)\n\n# Men survived in train data \nmen = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)/len(men)\nprint(\"% of men who survived:\", rate_men)\n\n% of women who survived: 0.7420382165605095\n% of men who survived: 0.18890814558058924\n\n\n\n# Machine Learning Model (Randoom Forest Algorithm)\n\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions, 'Sex': test_data.Sex})\noutput.to_csv('submission.csv', index=False)\n\n\n# Female survived = 0.910828025 \n# Male survived = 0.010398614\n\n# % of women who survived: 0.7420382165605095\n# % of men who survived: 0.18890814558058924"
  },
  {
    "objectID": "projects/ants-in-guadarrama/index.html",
    "href": "projects/ants-in-guadarrama/index.html",
    "title": "Butterfly Population Analysis",
    "section": "",
    "text": "Butterfly Population Analysis in Gettysburg, PA\nResearch Project on the change of local butterfly populations and relation to plant resources.\nThe insect apocalypse has"
  }
]